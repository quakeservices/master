#!/usr/bin/env bash
# vim: filetype=bash

export APP_NAME="quakeservices"
export CODE_DIR="/code"

export MASTER_NAME="master"
export MASTER_DIR="master"
export MASTER_PORT="27900/udp"
export MASTER_HEALTHCHECK="8080/tcp"

export AWS_DEFAULT_REGION="us-west-2"

export CONTAINER_BUILD_OPTIONS=()
export CONTAINER_AWS_OPTIONS=(
   --env AWS_ACCESS_KEY_ID
   --env AWS_SECRET_ACCESS_KEY
   --env AWS_ACCOUNT
   --env AWS_SECURITY_TOKEN
   --env AWS_DEFAULT_REGION
)
export CONTAINER_RUN_OPTIONS=(
   --interactive
   --rm
   --tty
   --workdir "${PWD}"
)
if which podman > /dev/null 2>&1; then
  export CONTAINER_COMMAND="podman"
  CONTAINER_SOCKET=$(podman info | awk -F': ' '/podman.sock/ {print $2}')
  export MOUNT_SOCKET=" --mount=type=bind,source=${CONTAINER_SOCKET},target=${CONTAINER_SOCKET},relabel=private"
  export MOUNT_PWD=" --mount=type=bind,source=${PWD},target=${PWD},relabel=private"
elif which docker > /dev/null 2>&1; then
  export CONTAINER_COMMAND="docker"
  CONTAINER_SOCKET="/var/run/docker.sock"
  export MOUNT_SOCKET=" --mount=type=bind,source=${CONTAINER_SOCKET},target=${CONTAINER_SOCKET}"
  export MOUNT_PWD=" --mount=type=bind,source=${PWD},target=${PWD}"
else
  echo "No container engine found; currently only podman or docker supported."
  exit 1
fi

export BASE_GHCR_TAG="ghcr.io/${APP_NAME}/base"
export BASE_DOCKER_TAG="docker.io/${APP_NAME}/base"
export MASTER_GHCR_TAG="ghcr.io/${APP_NAME}/master"
export MASTER_DOCKER_TAG="docker.io/${APP_NAME}/master"
export CDK_GHCR_TAG="ghcr.io/${APP_NAME}/cdk"
export CDK_DOCKER_TAG="docker.io/${APP_NAME}/cdk"
export DOCS_GHCR_TAG="ghcr.io/${APP_NAME}/docs"
export DOCS_DOCKER_TAG="docker.io/${APP_NAME}/docs"
export TEST_GHCR_TAG="ghcr.io/${APP_NAME}/test"
export TEST_DOCKER_TAG="docker.io/${APP_NAME}/test"

export HADOLINT_TAG="ghcr.io/hadolint/hadolint:latest"
export SHELLCHECK_TAG="docker.io/koalaman/shellcheck-alpine:latest"
