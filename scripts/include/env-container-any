#!/usr/bin/env bash
set -euo pipefail

#
# Docker / GHCR / ECS Tags
#
export REPOSITORY_GITHUB="ghcr.io"
export REPOSITORY_DOCKER="docker.io"

export MASTER_GHCR_TAG="${REPOSITORY_GITHUB}/${APP_NAME}/master"
export CDK_BASE_GHCR_TAG="${REPOSITORY_GITHUB}/gazwald/cdk-docker"
export CDK_GHCR_TAG="${REPOSITORY_GITHUB}/${APP_NAME}/cdk"
export DOCS_GHCR_TAG="${REPOSITORY_GITHUB}/${APP_NAME}/docs"
export TEST_GHCR_TAG="${REPOSITORY_GITHUB}/${APP_NAME}/test"

export ALL_TAGS=(
  "${MASTER_GHCR_TAG}"
  "${CDK_BASE_GHCR_TAG}"
  "${CDK_GHCR_TAG}"
  "${DOCS_GHCR_TAG}"
  "${TEST_GHCR_TAG}"
)

export HADOLINT_TAG="${REPOSITORY_GITHUB}/hadolint/hadolint:latest"
export SHELLCHECK_TAG="${REPOSITORY_DOCKER}/koalaman/shellcheck-alpine:latest"

#
# Docker / Podman support
#
if which podman > /dev/null 2>&1; then
  export CONTAINER_COMMAND="podman"
  export COMPOSE_COMMAND="podman-compose"
  CONTAINER_SOCKET=$(podman info | awk -F': ' '/podman.sock/ {print $2}')
  if [[ ! "$CONTAINER_SOCKET" ]]; then
    echo "Missing podman user socket"
    echo "See https://github.com/containers/podman/blob/main/docs/tutorials/socket_activation.md for setup."
    exit 1
  fi
  export MOUNT_SOCKET=" --mount=type=bind,source=${CONTAINER_SOCKET},target=${CONTAINER_SOCKET},relabel=private"
  export MOUNT_PWD=" --mount=type=bind,source=${PWD},target=${PWD},relabel=private"
  export MOUNT_AWS=" --mount=type=bind,source=${HOME}/.aws/config,target=/root/.aws/config,relabel=private"
elif which docker > /dev/null 2>&1; then
  export CONTAINER_COMMAND="docker"
  export COMPOSE_COMMAND="docker compose"
  CONTAINER_SOCKET="/var/run/docker.sock"
  export MOUNT_SOCKET=" --mount=type=bind,source=${CONTAINER_SOCKET},target=${CONTAINER_SOCKET}"
  export MOUNT_PWD=" --mount=type=bind,source=${PWD},target=${PWD}"
  export MOUNT_AWS=" --mount=type=bind,source=${HOME}/.aws/config,target=/root/.aws/config"
  export DOCKER_BUILDKIT=1
else
  echo "No container engine found; currently only podman or docker supported."
  echo "Assuming we're in CI or development environment."
fi
