---
name: Testing Master

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - '.github/workflows/testing_master.yaml'
      - 'master/**'
      - 'test/unit/master/**'
      - 'test/unit/storage/**'
      - 'pyproject.toml'
      - 'poetry.lock'
  pull_request:
    branches:
      - "main"
    paths:
      - '.github/workflows/testing_master.yaml'
      - 'master/**'
      - 'test/unit/master/**'
      - 'test/unit/storage/**'
      - 'pyproject.toml'
      - 'poetry.lock'

concurrency:
  # yamllint disable-line rule:line-length
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'

jobs:
  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: "
            venv\
            -${{ runner.os }}\
            -${{ steps.setup-python.outputs.python-version }}\
            -${{ hashFiles('**/poetry.lock') }}"

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --with 'master,dev'

      - name: "Unit tests"
        run: poetry run scripts/ci/test-unit
